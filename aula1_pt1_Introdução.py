# Vari√°veis -> React Estados(useStates), JavaScript -> var, let e const, Python -> nome_da_vari√°vel

"""
Comentarios multi linhas  
"""

nome_da_variavel = "fulano da silva"

idade = 16

cantora = "Fernanda correia"

# Nomeclatura de vari√°veis

#camelCase -> Uma forma de nomear as nossas vari√°veis
#snakeCase √© um padr√£o de nomeclatura no python

primeiroNomeSobrenome = "Jakeline Melo"

primeiro_nome_sobrenome = "Hugo Fran√ßa" 

#VARI√ÅVEL COM LETRA MAI√öSCULA -> CONSTANTE N√ÉO PODEM SER MODIFICADAS

TIPO_CARRO = "UNO"


#Tipos de dados em Python

#Inteiros (int) -> S√£o todos os n√∫meros positivos e negativos que n√£o possuem v√≠rgula.
temperatura = 273

idade_da_terra = 4555555555555555555555555

# Ponto flutuante ou decimais (float) -> S√£o todos os n√∫meros positivos e negativos que cont√©m virgula(ponto)
pi = 3.14159

preco = 49.99

#Strings ou textos (str) -> S√£o todos os dados do tipo textuais que est√£o entre aspas '' ou " "
dados_textuais = "Arcane √© a melhor s√©rie da hist√≥ria universal global internacional espacial multiversal"

frase_pontuada = "Agora s√£o 6 e √¥nibus"

#Booleanos (bool) -> S√£o os dados do tipo Verdadeiro ou Falso, e tem que ser escrito com a primeira letra em maiusculo
maior_de_dezoito = True

aula_amanha = False

#Nulos(none) -> S√£o dados do tipo Nulo, declaram que o valor daquela variavel √© tipo Nulo, tamb√©m escrito com a primeira letra maiuscula.
vazio = None
print(vazio)

#type() -> fun√ß√£o padr√£o do python que exibe para a gente o tipo de vari√°vel colocada entre parenteses

print(type(aula_amanha))


# üìù Vari√°veis em Diferentes Linguagens de Programa√ß√£o
# React -> Estados (useState)
# JavaScript -> var, let e const
# Python -> nome_da_variavel

# Exemplos de vari√°veis em Python:
nome = "Fulano da Silva"
idade = 16
cantora = "Fernanda Correa"

# üè∑Ô∏è Nomenclatura de Vari√°veis

# camelCase -> Padr√£o de nomenclatura onde a primeira palavra come√ßa com letra min√∫scula,
# e as seguintes iniciam com letra mai√∫scula.
primeiroNomeSobrenome = "Danilo Almeida"

# snake_case -> Padr√£o de nomenclatura onde as palavras s√£o separadas por underscores (_).
primeiro_nome_sobrenome = "Hugo Fran√ßa"

# üîí CONSTANTES -> Por conven√ß√£o, vari√°veis que n√£o devem ser alteradas s√£o escritas em letras mai√∫sculas.
TIPO_CARRO = "UNO"

# üõ†Ô∏è Tipos de Dados em Python

# üî¢ Inteiros (int) -> N√∫meros positivos ou negativos sem casas decimais.
temperatura = -273
idade_da_terra = 45000000000000000000000000000000000000000000000000000000000000000000000000  # Exemplo exagerado de um n√∫mero muito grande.

# üßÆ Ponto Flutuante (float) -> N√∫meros com casas decimais (usando ponto ao inv√©s de v√≠rgula).
pi = 3.14159
preco = 49.99

print(preco)  # Exibe o valor da vari√°vel 'preco'

# üî† Strings (str) -> Dados textuais, definidos entre aspas simples ('') ou duplas ("").
dados_textuais = "Arcane √© a melhor s√©rie da hist√≥ria universal, mundial, global, interdimensional, espacial e multiversal."

print(dados_textuais)

frase_pontuada = "Agora s√£o 6 e √¥nibus."

print(frase_pontuada)

# Podemos concatenar (juntar) strings de duas formas:
print(dados_textuais, frase_pontuada)  # Separa por espa√ßo automaticamente
print(dados_textuais + frase_pontuada)  # Junta sem espa√ßo extra

# ‚úÖ Booleanos (bool) -> Representam valores Verdadeiro (True) ou Falso (False).
maior_de_dezoito = True
print(maior_de_dezoito)

aula_amanha = False
print(aula_amanha)

# üö´ Nulos (None) -> Representam a aus√™ncia de valor (ou valor indefinido).
vazio = None
print(vazio)

# üîç type() -> Fun√ß√£o que retorna o tipo de dado de uma vari√°vel.
print(type(aula_amanha))  # Exibe "<class 'bool'>"

# üé® f-strings (formatted strings) -> Forma pr√°tica de inserir vari√°veis dentro de strings.
tema_aula = "Python, Passarela, Rato, Arcane"

print(f"O tema da aula de hoje √© {tema_aula}.")